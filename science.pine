// @version=4
study("kdj rsi vol confetti", shorttitle='"science #1"')

res = input(title="Timeframe", type=input.resolution, defval="")

hline(0, "Center", color=color.new(color.gray, 50), linestyle=hline.style_dashed)
band0 = hline(100, "Top", color=color.new(color.green, 50), linestyle=hline.style_dashed)
band1 = hline(-250, "Bottom", color=color.new(color.red, 50), linestyle=hline.style_dashed)
band3 = hline(-100, "Bottom", color=color.new(color.red, 50), linestyle=hline.style_dashed)
band4 = hline(-200, "Bottom", color=color.new(color.red, 50), linestyle=hline.style_dashed)

fill(band1, band0, color=color.rgb(126, 87, 194, 90), title="Background")

HTFo = timeframe.period == '1'   ?   '3'     : 
  timeframe.period == '3'   ?   '5'    : 
  timeframe.period == '5'   ?   '15'    : 
  timeframe.period == '15'  ?   '60'    : 
  timeframe.period == '30'  ?   '120'   : 
  timeframe.period == '45'  ?   '120'   : 
  timeframe.period == '60'  ?   '120'   : 
  timeframe.period == '120' ?   '240'   : 
  timeframe.period == '180' ?   '240'   : 
  timeframe.period == '240' ?   'D'     : 
  timeframe.period == 'D'   ?    'W'    : ""
  
[l, c, h, o, v] = security(syminfo.tickerid, res == "" ? HTFo: res, [low, close, high, open, volume])
[ll, cc, hh, oo, vv] = security(syminfo.tickerid, timeframe.period, [low, close, high, open, volume])

//kdj
length = input(9, title="period")
signal = input(3, title="signal")
hi = highest(h, length)
lo = lowest(l , length)
k = 100*((c-lo)/(hi-lo))
pK = ema(k, signal)
pD = ema(pK, signal)
pJ = 3*pK-2*pD
kshift = 100

//RSI

m_rsi(len) => 
    src = input(close, "Source", type = input.source)
    up = rma(max(change(src), 0), len)
    down = rma(-min(change(src), 0), len)
    rsi = down == 0 ? 100 : up == 0 ? 0 : 100 - (100 / (1 + up / down))
    rsi

// Calculate RSI
rsi1 = m_rsi(7)
rsi2 = m_rsi(13)
rsi3 = m_rsi(23)

rsicross = rsi1 > rsi2 and rsi2 > rsi3

// Calculate RSI
rsi = rsi(close, 7)
rsi_color = rsi > 75 ? color.red : rsi < 27 ? rsicross? color.yellow : color.green : color.white


// volume
norm(data) =>
    a = (data-sma(data, 3))
    b = stdev(data,3)
    ema(a/b, 12)

lb_vol() =>
    slow = input(12, "Short period")
    fast = input(26, "Long period")
    signal = input(9, "Smoothing period")
    maFast = ema( vv * cc, fast ) / ema( vv, fast ) 
    maSlow = ema( vv * cc, slow ) / ema( vv, slow )
    d = maSlow - maFast 
    maSignal = ema( d, signal ) 
    dm=d-maSignal
    d_color=d>=0? (d>d[1]?color.green:color.orange) : (d<d[1]?color.red:color.orange)
    [d, dm, d_color]
 
[d, dm, d_color] = lb_vol()

plot(rsi, color= rsi_color, transp=0, linewidth=2, style=plot.style_circles, title="RSI")
plot(avg(pK, pD)-kshift, color=color.orange, transp=0, linewidth=1, title="KD")
plot(pJ-kshift, color=color.fuchsia, transp=0, linewidth=1, title="J")
plot(norm(d)*50-150, color = d_color)
